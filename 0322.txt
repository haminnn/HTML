--<p> : 문서의 본문 문단을 표현할 때 사용
ex) <p>문단은 p태그로 표시할 수 있습니다.</p> 
= 문단은 p 태그로 표시할 수 있습니다.

--<br> : 줄바꿈
ex) <p>br 태그는 줄바꿈을<br> 표시할 수 있습니다.</p>
= br태그는 줄바꿈을
표시할 수 있습니다.

--<hr> : 수평줄 표시(섹션 나눌때)
           hr 태그는 다른 태그 내부에서는 사용하지 않도록 한다.

--특수문자
&nbsp; : 공백
&lt; : <
&gt; : >
&amp; : &
&copy; : @
&quot; : "

ex) <p>여러   개의   공백 표시</p>
    <p>여러&nbsp;&nbsp;&nbsp;개의&nbsp;&nbsp;&nbsp;공백 표시</p>
= 여러 개의 공백 표시
여러   개의   공백 표시

--텍스트 모양 관련 태그
b : 굵은 글자
i : 기울어진 글자
small : 작은 글자
sub : 아래 첨자
sup : 위 첨자
ins : 밑줄 글자
del : 가운데 줄이 그어진 글자(취소선)
em : 텍스트 강조
strong : 더 강한 텍스트 강조

ex) <p><b>글자 모양을 다양하게</b></p>

--하이퍼링크 태그

a : 하이퍼링크
ex) <a href="http://www.google.com(이동할 위치)">구글(출력문자열)</a>

-외부 링크 : 링크할 외부 웹 서버의 주소와 페이지의 위치를 모두 기술
ex) https://movie.naver.com/movie/running/current.nhn

-내부 링크 : 현제 페이지와 동일한 서버 내에 위치하므로 서버 주소는 명시할 필요 없음
-> 절대 경로 : 최상위(ROOT) 디렉터리를 기준으로 경로를 지정
-> 상대 경로 : 현재 페이지를 기준으로 트리 경로를 지정

목록 태그
ul : 순서가 없는 목록
ol : 순서가 있는 목록
li : ul, li 하부에 위치하는 목록의 항목 태그

테이블 태그
표를 만들 때 사용하는 태그
테이블 캡션 : caption
테이블 헤더 : thead
테이블 본문 : tbody
테이블 푸터 : tfoot
tr : 한 열
td : tr 태그 내에서 하나의 행
th : td 대신 사용, 제목 셀로 사용

열과 행의 확장
rowspan : 열의 확장
colspan : 행의 확장

이미지 태그
img : 웹 페이지 내에 이미지를 삽입하는 태크
이미지를 보지 못하는 시각장애인은 스크린 리더로 웹페이지를 듣게 되는데 
이때 ,img 태그에 설정된 alt 속성의 내용으로 어떤 이미지인지 이해
또한, 검색엔진 역시 img 태그의 alt 속성을 이용, 웹페이지의 이미지가 어떤 이미지인지 식별할 수 있게 됨

공간분할 태그
HTML요소가 공간을 점유하는 방식 : block(div) vs inline(span)
div : Block 요소로 줄바꿈이 일어난다.
span : inline 요소로 줄바꿈이 일어나지 않는다. 문맥의 흐름이 유지된다.

시맨틱 태그(의미론적 태그, div 태그 변형)
시맨틱 검색 : 검색 로봇이 검색어 의미를 스스로 분석하고 추리해 원하는 정보를 더 정교하게 찾아주는 검색 방식
시맨틱 마크업 : HTML 태그를 적절히 사용하여 문서 안의 내용이 담고 있는 의미가 무엇인지 표현할 수 있도록 구조를 작성하는 것
시맨틱 태그 : 검색 로봇에 웹페이지를 의미론적으로 해석할 수 있도록 도움을 주는 HTML5의 태그들
header : 헤더
nav : 네비게이션
aside : 사이드에 위치하는 공간
section : 여러 중심 내용을 감싸는 공간
article : 글 내용이 들어가는 공간
footer : 푸터

*입력양식(Form)태그
기본적으로 form은 웹 프론트에서 서버로 데이터를 전송하기 위해 사용
중첩하면 안됨
method 속성 : 서버로 데이터를 보낼 때 사용할 전송방식(GET, POST) 기본값은 GET
                   GET방식은 url뒤에 파라미터 전송
action 속성 : 폼으로 전송하는 데이터를 전달받아 처리할 서버의 페이지 주소 생략하면 현재 페이지로 데이터를 전송
input 태그 : 전송할 데이터를 입력하기 위한 입력 영역을 만드는 태그, form 태그 안쪽에 기술됨,
	type 속성에 따라 다른 형태의 입력 영역이 표시

(속성명)                 (설명)
------------------------------------------
type      : 입력 영역의 종류(기본값:text)
name     : 전송할 데이터의 이름

   type                            (설명)
--------------------------------------------------------
text         :             텍스트 입력 영역
passwode :              암호 입력 영역
hidden     :             숨겨진 입력 영역
file          :           파일 정보 선택 영역
submit     :                 전송 버튼
button     :             사용자 정의 버튼
checkbox  :    체크박스(중복 선택 가능)String[]
radio       : 라디오 버튼(단일 선택만 가능)text(string)


textarea 태그 : 장문의 텍스트(여러 줄)를 전송하고자 할 때 사용

(속성명)       (설명)
------------------------
rows       :   열 수
cols        :   행 수

select 태그 : 여러 개의 옵션(option) 가운데서 하나를 선택
fieldset 태그 : 입력 양식의 그룹 지정
legend 태그 : 입력 양식 그룹의 제목 지정
label 태그 : 입력 양식의 컨트롤 레이블(LABEL)을 표시
ex)
<form>
	<fieldset>
		<legend>로그인</legend>
		<label for="account">계정</label>
		<input type="text" name="account">
		<label for="passwd">비밀번호</label>
            	<input type="password" name="passwd" id="passwd"/><br />
           		<input type="hidden" name="secret" value="not-shown" />
	</fieldset>
</form>

*CSS의 의미
Cascading이 의미하는 것 : '계단형'의 의미로 스타일 적용시 규칙에 따라 우선 순위가 있고, 우선 순위에 따라 최종 렌더링될 스타일이 정해짐

CSS가 필요한 이유
1. HTML에 직접 스타일을 적용함으로써 생기는 HTML 문서 자체의 무거움을 줄일 수 있다.
2. 하나의 스타일 시트로 다수의 페이지에 같은 속성을 적용함으로써 작업 시간을 단축
3. 뤱 표준의 원칙 : HTML 마크업은 구조를 잡는데 사용, CSS로 디자인을 결정
가장 기본적인 스타일의 적용 : HTML 태그에 style 속성으로 지정
<h1 style="color: yellow; background-color: black">Inline Styling</h1>
!important를 붙히면 위의 규칙을 전부 무시할 수 있기에 가급적 사용을 안하는 것이 좋다.(최종 치트키)

가장 쉬운 방법이지만, 웹 표준 준수에는 가장 좋지 않은 방법

내부 스타일 시트 : HTML의 head 영역 안쪽에 <style> 태그를 이용, 스타일을 적용

외부 스타일 시트 : 여러 사람이 협업하거나 프로젝트의 규모가 클 때는 스타일 시트를 별도 외부 파일로 분리하는 것이 효율적
		웹 표준의 측면에서 가장 추천하는 방식
<link rel="stylesheet" href="style.css" />

*CSS3 선택자 : 선택자 개요
CSS 선택자(selector) : 특정한 HTML 태그를 선택할 때 사용
		    선택자를 사용, 특정 HTML 태그를 선택하면 조건에 맞는 태그에 스타일이나 스크립트를 적용할 수 있음
		    선택자의 활용은 스타일시트 뿐 아니라 Javascript에서도 사용하므로 뤱 프론트엔드 개발시 꼭 이해해야 함

기본 선택자의 종류
    종류              선택자                      설명
----------------------------------------------------------------------------------------------------------------------------------------------
전체 선택자	*	HTML 문서 내 모든 태그 선택
태그 선택자	태그명	HTML 페이지 내 모든 지정 태그
아이디 선택자	#아이디	지정한 아이디를 id 속성값으로 가지고 있는 태그 (페이지 내에서 유일식별자, 중복X)
클래스 선택자	.클래스	지정한 클래스를 class 속성에 포함하고 있는 태그 (페이지 내에서 중복가능, 1개의 식별자에 여러 요소 가능)

전체 선택자 : HTML 문서 내 모든 태그를 선택하므로 페이지 전체의 공통적인 특성 값을 부여할 수 있다.

적용 우선순위

인라인 스타일
페이지 스타일
외부 스타일
브라우저 기본스타일

우선순위
	아이디 선택자
	클래스 선택자
	태그 선택자
	전체 선택자
	...

작성 순서(우선순위가 동일할 때)
	나중에 작성한 것이 적용














